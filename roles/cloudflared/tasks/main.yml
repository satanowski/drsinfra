---

- name: Spawn a new CT
  ansible.builtin.include_role:
    name: pve

- name: Get latest release info
  ansible.builtin.uri:
    url: "{{ gh_api_latest }}"
    return_content: true
  register: release_info

- name: Download newest version
  ansible.builtin.get_url:
    url: "{{ item.browser_download_url }}"
    dest: "/opt/{{ ct_name }}"
    checksum: "{{ item.digest }}"
    mode: "u+rwx"
  loop: "{{ release_info.json.assets }}"
  when: "item.name == 'cloudflared-linux-amd64'"
  delegate_to: "{{ ct_ip }}"

- name: Make it executable
  ansible.builtin.command:
    cmd: "chmod +x /opt/{{ ct_name }}"
  delegate_to: "{{ ct_ip }}"

- name: Check if cf service is installed
  ansible.builtin.stat:
    path: "/etc/init.d/cloudflared"
  register: cf_status
  delegate_to: "{{ ct_ip }}"

- name: Install cf service and run it
  ansible.builtin.command:
    cmd: "/opt/{{ ct_name }} service install {{ cf_token }}"
  delegate_to: "{{ ct_ip }}"
  when: not cf_status.stat.exists

- name: Start the service
  ansible.builtin.service:
    name: "cloudflared"
    state: started
  delegate_to: "{{ ct_ip }}"

# to be continued
