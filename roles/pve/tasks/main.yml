---

- name: Spawn new regular container
  community.general.proxmox:
    api_user: "{{ pve_api_user }}"
    api_token_id: "{{ pve_api_token_name }}"
    api_token_secret: "{{ pve_api_token_secret }}"
    api_host: "{{ pve_node_ip }}"
    node: "{{ pve_node_name }}"
    hostname: "{{ ct_name }}"
    clone: "{{ pve_ct_template_id }}"
    clone_type: full
    storage: "{{ pve_ct_destination_storage }}"
    state: present
    unprivileged: true
  register: lxc_result
  delegate_to: localhost
  when: pve_unprivileged | bool

- name: Remember VMID
  ansible.builtin.set_fact:
    vmid: lxc_result.vmid
  when: pve_unprivileged | bool

- name: Spawn new privileged container
  community.general.proxmox:
    api_user: "{{ pve_api_user }}"
    api_token_id: "{{ pve_api_token_name }}"
    api_token_secret: "{{ pve_api_token_secret }}"
    api_host: "{{ pve_node_ip }}"
    node: "{{ pve_node_name }}"
    hostname: "{{ ct_name }}"
    clone: "{{ pve_ct_template_id }}"
    clone_type: full
    storage: "{{ pve_ct_destination_storage }}"
    state: present
    unprivileged: false
  register: lxc_result
  delegate_to: localhost
  when: not pve_unprivileged | bool

- name: Remember VMID
  ansible.builtin.set_fact:
    vmid: lxc_result.vmid
  when: not pve_unprivileged | bool

- name: Waiting few seconds for container to settle down...
  ansible.builtin.wait_for:
    timeout: 5

- name: Ask api for CT size
  ansible.builtin.uri:
    validate_certs: false
    headers:
      Authorization: "{{ pve_http_token }}"
    url: "{{ pve_api }}/nodes/{{ pve_node_name }}/lxc/{{ vmid }}/config"
    return_content: true
  register: api_resp
  until: api_resp.status == 200
  delegate_to: localhost
  when: ct_min_size is defined

- name: Extract current size of the CT
  ansible.builtin.set_fact:
    ct_size: api_resp.json.data.rootfs | regex_search('size=([^,]+)', '\\1') | first
  when: ct_min_size is defined

- name: Convert size to int
  ansible.builtin.set_fact:
    ct_size: ct_size[:-1] | int
  when: ct_min_size is defined

- name: Resize CT if needed
  ansible.builtin.uri:
    validate_certs: false
    headers:
      Authorization: "{{ pve_http_token }}"
    url: "{{ pve_api }}/nodes/{{ pve_node_name }}/lxc/{{ vmid }}/resize"
    method: PUT
    body_format: form-urlencoded
    body:
      disk: rootfs
      size: "{{ ct_min_size }}G"
    return_content: true
  when: ct_min_size is defined and (ct_size | int) < ct_min_size
  register: api_resp
  delegate_to: localhost

- name: Start the container...
  community.general.proxmox:
    api_user: "{{ pve_api_user }}"
    api_token_id: "{{ pve_api_token_name }}"
    api_token_secret: "{{ pve_api_token_secret }}"
    api_host: "{{ pve_node_ip }}"
    node: "{{ pve_node_name }}"
    vmid: "{{ vmid }}"
    hostname: "{{ ct_name }}"
    state: started
  delegate_to: localhost
  register: lxc_result

- name: Waiting few seconds for container to start
  ansible.builtin.wait_for:
    timeout: 5
  when: "'already' in lxc_result.msg"

- name: Ask api for CT interfaces
  ansible.builtin.uri:
    validate_certs: false
    headers:
      Authorization: "{{ pve_http_token }}"
    url: "{{ pve_api }}/nodes/{{ pve_node_name }}/lxc/{{ vmid }}/interfaces"
    return_content: true
  register: api_resp
  until: api_resp.status == 200
  delegate_to: localhost

- name: Extract IP of newly created CT
  ansible.builtin.set_fact:
    ct_ip: api_resp | json_query("json.data | [] | [?name=='eth0'].inet") | map('regex_replace', '/.*', '') | first | regex_replace('[\n]+', '')

- name: Print out CT ip
  ansible.builtin.debug:
    msg: "New CT ip address: '{{ ct_ip }}'"

- name: Wait a bit for ssh service
  ansible.builtin.wait_for:
    port: 22
    host: "{{ ct_ip }}"
    delay: 3
    timeout: 30
  delegate_to: localhost
