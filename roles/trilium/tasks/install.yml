--- 

  - name: Load configuration
    ansible.builtin.include_vars:
      file: ../config.yml

  - name: Spawn a new CT
    include_role:
      name: pve
      tasks_from: create_ct

  - name: Ensure packages are installed
    community.general.apk:
      name: "{{item}}"
      no_cache: false
      state: latest      
    with_items:
      - npm
    delegate_to: "{{ct_ip}}"

  - name: Get latest release info
    uri:
      url: "{{gh_api_latest}}"
      return_content: yes
    register: release_info

  - ansible.builtin.set_fact: latest="{{release_info.json.tag_name[1:]}}"

  - name: Download newest version
    get_url:
      url: "{{ item.browser_download_url }}"
      dest: "/tmp/{{ct_name}}.tar.xz"
      checksum: "{{item.digest}}"
    loop: "{{ release_info.json.assets }}"
    when: "'linux-x64.tar.xz' in item.name"
    delegate_to: "{{ct_ip}}"

  - name: Extract the app
    ansible.builtin.shell:
      chdir: "/opt"
      cmd: "tar -xf /tmp/{{ct_name}}.tar.xz"
    delegate_to: "{{ct_ip}}"
  
  - name: Delete app archive
    ansible.builtin.file:
      path: "/tmp/{{ct_name}}.tar.xz"
      state: absent
    delegate_to: "{{ct_ip}}"

  - name: Rename the folder
    ansible.builtin.shell:
      chdir: "/opt"
      cmd: "mv TriliumNotes-Server-{{latest}}-linux-x64 {{ct_name}}"
    delegate_to: "{{ct_ip}}"

  - name: Build the app
    ansible.builtin.shell:
      chdir: "{{app_dir}}"
      cmd: |
        npm rebuild
        npm install better-sqlite3
    delegate_to: "{{ct_ip}}"

  - name: Create start script
    lineinfile:
      create: true
      mode: u+rwx
      owner: root
      group: root
      path: "/etc/local.d/{{ct_name}}.start"
      line: "#!/bin/sh\ncd /opt/{{ct_name}} && nohup node main.cjs &"
      state: present
    delegate_to: "{{ct_ip}}"

  - name: Enable the service
    ansible.builtin.service:
      name: local
      enabled: true
    delegate_to: "{{ct_ip}}"

  - name: Turn on the service
    ansible.builtin.service:
      name: local
      state: restarted
    delegate_to: "{{ct_ip}}"