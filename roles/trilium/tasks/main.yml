---

- name: Spawn a new CT
  ansible.builtin.include_role:
    name: pve
    tasks_from: create_ct

- name: Ensure packages are installed
  community.general.apk:
    name: "{{ item }}"
    no_cache: false
    state: latest
  with_items:
    - npm
  delegate_to: "{{ ct_ip }}"

- name: Get latest release info
  ansible.builtin.uri:
    url: "{{ gh_api_latest }}"
    return_content: true
  register: release_info

- name: Remember latest version tag
  ansible.builtin.set_fact:
    latest: "{{ release_info.json.tag_name[1:] }}"

- name: Download newest version
  ansible.builtin.get_url:
    url: "{{ item.browser_download_url }}"
    dest: "/tmp/{{ ct_name }}.tar.xz"
    checksum: "{{ item.digest }}"
    mode: '0755'
  loop: "{{ release_info.json.assets }}"
  when: "'linux-x64.tar.xz' in item.name"
  delegate_to: "{{ ct_ip }}"

- name: Extract the app
  ansible.builtin.unarchive:
    src: "/tmp/{{ ct_name }}.tar.xz"
    dest: /opt
    mode: '0755'
    remote_src: true
  delegate_to: "{{ ct_ip }}"

- name: Delete app archive
  ansible.builtin.file:
    path: "/tmp/{{ ct_name }}.tar.xz"
    state: absent
  delegate_to: "{{ ct_ip }}"

- name: Rename the folder
  ansible.builtin.command:
    chdir: "/opt"
    cmd: "mv TriliumNotes-Server-{{ latest }}-linux-x64 {{ ct_name }}"
  delegate_to: "{{ ct_ip }}"

- name: Build the app
  ansible.builtin.shell:
    chdir: "{{ app_dir }}"
    cmd: |
      npm rebuild
      npm install better-sqlite3
  delegate_to: "{{ ct_ip }}"

- name: Create start script
  ansible.builtin.lineinfile:
    create: true
    mode: u+rwx
    owner: root
    group: root
    path: "/etc/local.d/{{ ct_name }}.start"
    line: "#!/bin/sh\ncd /opt/{{ ct_name }} && nohup node main.cjs &"
    state: present
  delegate_to: "{{ ct_ip }}"

- name: Enable the service
  ansible.builtin.service:
    name: local
    enabled: true
  delegate_to: "{{ ct_ip }}"

- name: Turn on the service
  ansible.builtin.service:
    name: local
    state: restarted
  delegate_to: "{{ ct_ip }}"
