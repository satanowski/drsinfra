---

- name: Spawn a new CT
  ansible.builtin.include_role:
    name: pve

- name: Get latest release info
  ansible.builtin.uri:
    url: "{{ gh_api_latest }}"
    return_content: true
  register: release_info

- name: Download newest version
  ansible.builtin.get_url:
    url: "{{ item.browser_download_url }}"
    dest: "/tmp/{{ ct_name }}.tar.gz"
    checksum: "{{ item.digest }}"
    mode: "u+rwx"
  loop: "{{ release_info.json.assets }}"
  when: "'homebox_Linux_x86_64.tar.gz' == item.name"
  delegate_to: "{{ ct_ip }}"

- name: Extract the app
  ansible.builtin.unarchive:
    dest: "/opt"
    src: "/tmp/{{ ct_name }}.tar.gz"
    remote_src: true
  delegate_to: "{{ ct_ip }}"

- name: Delete the archive
  ansible.builtin.file:
    path: /tmp/{{ ct_name }}.tar.gz
    state: absent
  delegate_to: "{{ ct_ip }}"

- name: Add a systemd service to start the app at boot
  ansible.builtin.copy:
    dest: /etc/systemd/system/{{ ct_name }}.service
    content: |
      [Unit]
      Description={{ ct_name }} startup script

      [Service]
      WorkingDirectory=/opt
      ExecStart=nohup ./{{ ct_name }} &
      Restart=always
      User=root

      [Install]
      WantedBy=multi-user.target
    mode: "u+rwx"
  notify: Reload systemd
  delegate_to: "{{ ct_ip }}"

- name: Enable sevice
  ansible.builtin.systemd:
    name: "{{ ct_name }}.service"
    enabled: true
    state: started
  delegate_to: "{{ ct_ip }}"
